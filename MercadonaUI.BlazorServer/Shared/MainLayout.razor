@inherits LayoutComponentBase
@inject NavigationManager navManager

<MudThemeProvider Theme="@_myTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" Fixed="true" Style="align-content:flex-start">
        
        <MudIconButton Icon="@Icons.Material.Filled.Home" Size="Size.Large" Color="Color.Primary" Class="p-0 m-0" OnClick="HandleHomeClick" />
        
        <div class="d-flex align-content-start">
            <MudTextField Value="@_search" ValueChanged="((string value) => SearchValueChanged(value))"
                          DebounceInterval="200" Immediate="true"
                          Placeholder="Buscar productos" Variant="Variant.Outlined" Class="my-auto"
                          Margin="Margin.Dense" IconSize="Size.Medium" Style="max-width: 300px; background-color: whitesmoke"
                          Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Default" />

            <MudLink Style="font-size:inherit; align-content:center" Class="my-auto ms-10" Href="/categories">Categorías</MudLink>
        </div>

    </MudAppBar>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False" Class="my-2 pt-2">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    MyTheme _myTheme = new();

    string _search = "";

    private void HandleHomeClick()
    {
        _search = "";
        navManager.NavigateTo("/landing");
    }

    private void SearchValueChanged(string newValue)
    {
        newValue = newValue.Trim().ToLower();
        if (_search != newValue)
        {
            if (newValue.Length > 0 && (newValue.Length >= 3 || _search.Length > newValue.Length))
                navManager.NavigateTo($"/search-products?query={newValue}");
            else
                navManager.NavigateTo("/");

            _search = newValue;
        }
    }
}