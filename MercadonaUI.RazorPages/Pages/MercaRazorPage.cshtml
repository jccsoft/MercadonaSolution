@page
@model MercadonaUI.RazorPages.Pages.MercaRazorPage
@using Components

@{
    ViewData["Title"] = "Mrkdona - Razor Page";
}

<div class="container">

    <div class="row">
        <div class="col col-2">
        </div>
        <div class="col col-10">
            <form asp-action="post" autocomplete="off" class="navbar-form" role="search">

                <input id="SelectedCategoryId" asp-for="RequestParams.CategoryId" value="@Model.RequestParams.CategoryId" hidden />
                <input id="SelectedPage" asp-for="RequestParams.CurrentPage" value="@Model.RequestParams.CurrentPage" hidden />
                <input asp-for="RequestParams.ItemsXPage" value="@Model.RequestParams.ItemsXPage" hidden />
                <input asp-for="LoadedCategories" value="@Model.LoadedCategories" hidden />

                <div class="form-group">
                    <input type="search" asp-for="RequestParams.Search" class="form-control mb-2" value="@Model.RequestParams.Search"
                           placeholder="producto a buscar" style="box-shadow:none" autofocus />
                    <input type="submit" class="btn btn-primary" value="Buscar" hidden />
                </div>
            </form>
        </div>
    </div>

    <div class="row">
        <div class="col col-2">
            <div class="accordion" id="accordionMenu" style="width:100%;">
            @if (Model.Categories != null)
            {
                
                    @foreach (var cat0 in Model.Categories.Where(c => c.ParentId == 0))
                    {
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button id="@($"cat{cat0.Id}")" style="padding: 6px;font-size:0.45em;" 
                                        class="@($"accordion-button {(Model.SelectedCategoriesIds.Contains(cat0.Id) ? "" :"collapsed")}")" 
                                        type="button" data-bs-toggle="collapse" data-bs-target="@($"#collapse{cat0.Id}")" 
                                        aria-expanded="false" aria-controls="@($"collapse{cat0.Id}")">
                                    @cat0.Name
                                </button>
                            </h2>
                            <div id="@($"collapse{cat0.Id}")" 
                                 class="@($"accordion-collapse collapse {(Model.SelectedCategoriesIds.Contains(cat0.Id) ? "show" :"")}")" data-bs-parent="#accordionMenu">
                                <div class="accordion-body">
                                    <div class="accordion" id="@($"accordion{cat0.Id}")">
                                        @foreach (var cat1 in Model.Categories.Where(c => c.ParentId == cat0.Id))
                                        {
                                            <div class="accordion-item">
                                                <h2 class="accordion-header">
                                                    <button style="padding: 6px;font-size:0.45em;" id="@($"cat{cat1.Id}")"
                                                            class="@($"accordion-button {(Model.SelectedCategoriesIds.Contains(cat1.Id) ? "" :"collapsed")}")" 
                                                            type="button" data-bs-toggle="collapse" data-bs-target="@($"#collapse{cat1.Id}")" aria-expanded="false" aria-controls="@($"collapse{cat1.Id}")">
                                                        @cat1.Name
                                                    </button>
                                                </h2>
                                                <div id="@($"collapse{cat1.Id}")" class="@($"accordion-collapse collapse {(Model.SelectedCategoriesIds.Contains(cat1.Id) ? "show" :"")}")" data-bs-parent="@($"#accordion{cat0.Id}")">
                                                    <div class="accordion-body">
                                                        <div class="accordion" id="@($"accordion{cat1.Id}")">
                                                            @foreach (var cat2 in Model.Categories.Where(c => c.ParentId == cat1.Id))
                                                            {
                                                                <div class="accordion-item">
                                                                    <h2 class="accordion-header">
                                                                        <button id="@($"cat{cat2.Id}")" class="@($"boton-acordeon {(Model.SelectedCategoriesIds.Contains(cat2.Id) ? "show" :"")}")" style="font-size:0.45em;">
                                                                            @cat2.Name
                                                                        </button>
                                                                    </h2>
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                
            }
            </div>
        </div>
        <div class="col col-10">

            <div id="selectedMenu">
                @if (Model.SelectedCategory != null)
                {
                    <div class="row mb-3">
                        <div class="col col-md-auto p-0 ms-3">
                            <button type="button" class="btn-close" aria-label="Close" style="margin-top: 3px;"></button>
                        </div>
                        <div class="col col-md-auto p-0">
                            <p class="p-0 m-1" style="font-size:inherit"><strong>@Model.SelectedCategory.Name</strong></p>
                        </div>
                    </div>
                }
            </div>

            @if (string.IsNullOrWhiteSpace(Model.ErrorMessage) == false)
            {
                <div class="alert alert-danger" role="alert">
                    @Model.ErrorMessage
                </div>
            }
            else if (Model.RequestParams.ReadyForRequest() == false)
            {
                <span></span>
            }
            else if (Model.RecordsNotFound)
            {
                <div class="alert alert-primary" role="alert">
                    No se han encontrado productos que coincidan con estos criterios
                </div>
            }
            else if (Model.ProductsResponse == null || Model.ProductsResponse.Data == null)
            {
                <div class="spinner-border" role="status">
                    <span class="sr-only">Buscando productos...</span>
                </div>
            }
            else
            {
                <p class="mb-3" style="font-size:smaller;">@Model.HeaderMessage</p>

                <div id="pagination">
                    @if (Model.ProductsResponse.TotalPages > 1)
                    {
                        <nav class="mb-2 mt-1">
                            <ul class="pagination">
                                <li class="page-item @(Model.RequestParams.CurrentPage == 1 ? "disabled":"")">
                                    <a id="pagePrevious" class="page-link" href="#" aria-label="Previous Page">
                                        @(@"<")
                                    </a>
                                </li>
                                @if (Model.PageMin > 1)
                                {
                                    <li class="page-item disabled">
                                        <a id="pagePreviousHidden" class="page-link" href="#" aria-label="">
                                            ...
                                        </a>
                                    </li>
                                }
                                @for (var i = Model.PageMin; i <= Model.PageMax; i++)
                                {
                                    <li class="page-item @(i == Model.RequestParams.CurrentPage ? "active":"")">
                                        <a id="@($"page{i}")" class="page-link" href="#" aria-label="@($"page {i}")"> @i</a>
                                    </li>
                                }
                                @if (Model.PageMax < Model.ProductsResponse.TotalPages)
                                {
                                    <li class="page-item disabled">
                                        <a id="pageNextHidden" class="page-link" href="#" aria-label="">
                                            ...
                                        </a>
                                    </li>
                                }
                                <li class="page-item @(Model.RequestParams.CurrentPage == Model.ProductsResponse.TotalPages ? "disabled":"")">
                                    <a id="pageNext" class="page-link" href="#" aria-label="Next Page">
                                        @(@">")
                                    </a>
                                </li>

                            </ul>
                        </nav>
                    }
                </div>

                <div class="row">
                    @foreach(var product in Model.ProductsResponse.Data)
                    {
                        <div class="card ms-3 my-2" style="width: 14em; height: 18em;">

                            <img src="@product.Image" class="card-img-top mx-auto d-block" style="width: 10em;" alt="@product.Name">
                            
                            <div class="card-body p-0">
                                <h6 class="card-title dos-lineas mt-0 mb-1" style="height:2.4em;">
                                    @product.Name
                                </h6>
                                <div class="row mt-2" style="height:2em; font-size:smaller;">
                                    <div class="col col-7">
                                        <p class="card-text dos-lineas">@product.Packaging</p>
                                    </div>
                                    <div class="col col-5 float-right">
                                            <p class="card-text dos-lineas">@product.ReferencePriceString</p>
                                    </div>
                                </div>
                                <h5 class="card-title mt-3 mb-0">@product.UnitPriceString</h5>
                            </div>

                        </div>
                    }
                </div>

            }
        </div>
    </div>
</div>


@section Scripts {
    <script>

        function OnCategorySelected(event) {
            EventHandlerHelper.fixEvent(event);
            if (event.target.id.length > 3){
                var id = event.target.id.substring(3);
                document.getElementById("SelectedCategoryId").setAttribute("value", id);
                document.getElementById("SelectedPage").setAttribute("value", 1);
                document.forms[0].submit();
            }
        }

        function OnPageSelected(event) {

            EventHandlerHelper.fixEvent(event);

            if (event.target.id.length > 4)
            {
                var selectedPage = event.target.id.substring(4);
                var currentPage = @Model.RequestParams.CurrentPage;

                switch (selectedPage) {
                    case "Previous":
                        if (currentPage > 1) {
                            currentPage--;
                        }
                        break;
                    case "Next":
                        if (currentPage < @Model.PageMax) {
                            currentPage++;
                        }
                        break;
                    default:
                        currentPage = selectedPage;
                        break;
                }

                if (currentPage != @Model.RequestParams.CurrentPage) {
                    document.getElementById("SelectedPage").setAttribute("value", currentPage);
                    document.forms[0].submit();
                }
            }

        }

        function OnCloseCategory(event){
            if (event.target.tagName.toLowerCase() == "button") {
                var inputCategory = document.getElementById("SelectedCategoryId");
                document.getElementById("SelectedCategoryId").setAttribute("value", 0);
                document.getElementById("SelectedPage").setAttribute("value", 1);
                document.forms[0].submit();
            }
        }

        function initialize() {
            var elMenu = document.getElementById("accordionMenu");
            var elPage = document.getElementById("pagination");
            var elClose = document.getElementById("selectedMenu")

            if (elMenu != null) {
                EventHandlerHelper.addEventListener(elMenu, "click", OnCategorySelected);
            }

            if (elPage != null) {
                EventHandlerHelper.addEventListener(elPage, "click", OnPageSelected);
            }

            if (elClose != null) {
                EventHandlerHelper.addEventListener(elClose, "click", OnCloseCategory);
            }

        }

        window.onload = initialize;

    </script>
}